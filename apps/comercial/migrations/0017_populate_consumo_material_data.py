# Generated by Django 5.0.6 on 2024-07-09 17:12

from django.db import migrations

def populate_consumo_material(apps, schema_editor):
    ModeloProduto = apps.get_model('comercial', 'ModeloProduto')
    MateriaPrima = apps.get_model('estoque', 'MateriaPrima')
    ConsumoMaterial = apps.get_model('comercial', 'ConsumoMaterial')

    # --- Dados de Consumo ---
    consumo_data = {
        'Camisa Polo': {
            'materiais': ['Tecido Piquet', 'Linha Tubo', 'Botões Resinados', 'Gola Canaletada', 'Fio Bordado'],
            'unidades': ['METRO', 'METRO', 'UNIDADE', 'METRO', 'GRAMA'],
            'tipos': ['TECIDO', 'LINHA', 'BOTAO', 'GOLAS', 'FIO_DE_BORDADO'],
            'tamanhos': {
                'P':  [1.10, 18, 3, 0.18, 25],
                'M':  [1.20, 20, 3, 0.20, 30],
                'G':  [1.30, 22, 3, 0.22, 35],
                'GG': [1.40, 25, 3, 0.25, 40],
                'XG': [1.50, 28, 3, 0.28, 45],
            }
        },
        'Camisa Social': {
            'materiais': ['Tecido Tricoline', 'Linha Tubo', 'Botões Pérola', 'Entretela Colarinho', 'Entretela Punho', 'Etiqueta', 'Fio Bordado'],
            'unidades': ['METRO', 'METRO', 'UNIDADE', 'METRO', 'METRO', 'UNIDADE', 'GRAMA'],
            'tipos': ['TECIDO', 'LINHA', 'BOTAO', 'TERMOCOLANTE', 'TERMOCOLANTE', 'ETIQUETA', 'FIO_DE_BORDADO'],
            'tamanhos': {
                'P':  [1.40, 22, 8, 0.20, 0.15, 1, 25],
                'M':  [1.50, 24, 8, 0.22, 0.18, 1, 30],
                'G':  [1.60, 26, 8, 0.25, 0.20, 1, 35],
                'GG': [1.70, 28, 8, 0.27, 0.22, 1, 40],
                'XG': [1.80, 30, 8, 0.30, 0.25, 1, 45],
            }
        },
        'Camisa Tradicional': {
            'materiais': ['Tecido PV', 'Linha Tubo', 'Botões Simples', 'Etiqueta', 'Fio Bordado'],
            'unidades': ['METRO', 'METRO', 'UNIDADE', 'UNIDADE', 'GRAMA'],
            'tipos': ['TECIDO', 'LINHA', 'BOTAO', 'ETIQUETA', 'FIO_DE_BORDADO'],
            'tamanhos': {
                'P':  [1.20, 20, 5, 1, 20],
                'M':  [1.30, 22, 5, 1, 25],
                'G':  [1.40, 24, 5, 1, 30],
                'GG': [1.50, 26, 5, 1, 35],
                'XG': [1.60, 28, 5, 1, 40],
            }
        }
    }

    for nome_modelo, data in consumo_data.items():
        modelo, _ = ModeloProduto.objects.get_or_create(nome=nome_modelo, defaults={'tipo': 'CAMISA'})
        
        materiais_cache = {}
        for i, nome_material in enumerate(data['materiais']):
            mat, _ = MateriaPrima.objects.get_or_create(
                name=nome_material,
                defaults={
                    'tipo_produto': data['tipos'][i],
                    'unidade_medida': data['unidades'][i]
                }
            )
            materiais_cache[i] = mat

        for tamanho, consumos in data['tamanhos'].items():
            for i, quantidade in enumerate(consumos):
                ConsumoMaterial.objects.get_or_create(
                    modelo=modelo,
                    tamanho=tamanho,
                    material=materiais_cache[i],
                    defaults={'quantidade': quantidade}
                )

class Migration(migrations.Migration):

    dependencies = [
        ('comercial', '0016_consumomaterial_delete_materialmodelo'),
        ('estoque', '0001_initial'), # Add dependency on estoque if not present
    ]

def delete_consumo_material(apps, schema_editor):
    ConsumoMaterial = apps.get_model('comercial', 'ConsumoMaterial')
    ConsumoMaterial.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('comercial', '0016_consumomaterial_delete_materialmodelo'),
        ('estoque', '0001_initial'), # Add dependency on estoque if not present
    ]

    operations = [
        migrations.RunPython(populate_consumo_material, reverse_code=delete_consumo_material),
    ]
